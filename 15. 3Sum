1.这题有点难，这样暴力很容易想到，但是不能去除重复的值
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        int nl=nums.length;
        List<Integer> l=new ArrayList<>();
        List<List<Integer>> result=new ArrayList<>();
        for(int i=0;i<nl;i++)
        {
            for(int t=i;t<nl;t++)
            {
                for(int y=t;y<nl;y++)
                {
                    if((nums[i]+nums[t]+nums[y])==0)
                    {
                        l.add(nums[i]);
                        l.add(nums[t]);
                        l.add(nums[y]);
                        result.add(l);
                        System.out.println(result);
                        l=new ArrayList<>();
                    }
                }
            }
            
        }
        return result;
    }
}
2.这个抄的别人的，心情好了再看
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        int len = nums.length;
        if (len < 3) return list;
        Arrays.sort(nums);
        int max = nums[len - 1];
        if (max < 0) return list;
        for (int i = 0; i < len - 2; ) {
            if (nums[i] > 0) break;
            if (nums[i] + 2 * max < 0) {
                while (nums[i] == nums[++i] && i < len - 2) ;
                continue;
            }
            int left = i + 1, right = len - 1;
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == 0) {
                    list.add(Arrays.asList(nums[i], nums[left], nums[right]));
                    while (nums[left] == nums[++left] && left < right) ;
                    while (nums[right] == nums[--right] && left < right) ;
                } else if (sum < 0) ++left;
                else --right;
            }
            while (nums[i] == nums[++i] && i < len - 2) ;
        }
        return list;
    }
}
